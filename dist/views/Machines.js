"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(require("react")),_semanticUiReact=require("semantic-ui-react");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class Machine extends _react.default.Component{constructor(a){super(),this.state={machine:a.machine}}getNextSnapshot(){if(!this.state.machine.id.endsWith("-template"))return"";const a=this.state.machine.id.replace(/-template$/,"");if(!this.state.machine.snapshot)return a+"-1-template";const b=+this.state.machine.snapshot.replace(a+"-","").replace("-template","");return Number.isInteger(b)?a+"-"+(b+1)+"-template":""}openRdp(){window.open(config.remote+"/"+encodeURIComponent(this.state.machine.id))}createSnapshot(a){this.state.loading||(this.setState({loading:"snapshot"}),fetch("machine/"+encodeURIComponent(this.state.machine.id)+"/snapshot/"+encodeURIComponent(a),{method:"POST"}).then(a=>{a.ok?this.reload(!0):this.setState({loading:null})}).catch(()=>{this.setState({loading:null})}))}setMachineState(a){this.state.loading||(this.setState({loading:a}),fetch("machine/"+encodeURIComponent(this.state.machine.id)+"?ip",{method:"PUT",headers:{"content-type":"application/json"},body:JSON.stringify({state:a})}).then(a=>a.ok?a.json().then(a=>{this.setState({machine:{...this.state.machine,...a},loading:null})}):void this.setState({loading:null})).catch(()=>{this.setState({loading:null})}))}reload(a){!a&&this.state.loading||(this.setState({loading:"reload"}),fetch("machine/"+encodeURIComponent(this.state.machine.id)+"?ip").then(a=>a.ok?a.json().then(a=>{this.setState({machine:a,loading:null})}):void this.setState({loading:null})).catch(()=>{this.setState({loading:null})}))}render(){const a=this.state.machine;let b;"running"===a.state?"rdp-port"in a&&(b=_react.default.createElement(_semanticUiReact.Button,{icon:!0,color:"blue",basic:!0,onClick:()=>this.openRdp()},"RDP: ",a["rdp-port"]," ",_react.default.createElement(_semanticUiReact.Icon,{name:"external alternate"}))):"poweroff"===this.state.machine.state&&this.state.machine.id.endsWith("-template")&&(b=_react.default.createElement(_semanticUiReact.Popup,{on:"click",hideOnScroll:!0,trigger:_react.default.createElement(_semanticUiReact.Button,{icon:!0,color:"violet",loading:"snapshot"===this.state.loading,disabled:!!this.state.loading},_react.default.createElement(_semanticUiReact.Icon,{name:"save"})," Snapshot"),onOpen:()=>setTimeout(()=>this.refs.snapshotName.focus(),1)},_react.default.createElement(_semanticUiReact.Form,{style:{marginBottom:"0px"}},_react.default.createElement(_semanticUiReact.Input,{ref:"snapshotName",placeholder:"Snapshot name",defaultValue:this.getNextSnapshot()}),_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.createSnapshot(this.refs.snapshotName.inputRef.value)},"Create"))));let c="poweroff"===a.state?_react.default.createElement(_semanticUiReact.Button,{icon:!0,primary:!0,disabled:!!this.state.loading,loading:"running"===this.state.loading,onClick:()=>this.setMachineState("running")},_react.default.createElement(_semanticUiReact.Icon,{name:"bolt"})," Power on"):"running"===a.state?_react.default.createElement(_semanticUiReact.Button.Group,null,_react.default.createElement(_semanticUiReact.Button,{icon:!0,color:"yellow",disabled:!!this.state.loading,loading:"acpipowerbutton"===this.state.loading,onClick:()=>this.setMachineState("acpipowerbutton")},_react.default.createElement(_semanticUiReact.Icon,{name:"power off"})," Shutdown"),_react.default.createElement(_semanticUiReact.Button.Or,null),_react.default.createElement(_semanticUiReact.Button,{icon:!0,negative:!0,disabled:!!this.state.loading,loading:"poweroff"===this.state.loading,onClick:()=>this.setMachineState("poweroff")},_react.default.createElement(_semanticUiReact.Icon,{name:"plug"})," Power off")):_react.default.createElement(_semanticUiReact.Button,{disabled:!0},"Unknown");const d=[];if("ip"in a)for(const b in a.ip)if(4<=d.length){d.push(_react.default.createElement("p",{key:b},"..."));break}else d.push(_react.default.createElement("p",{key:b},a.ip[b]));return _react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.Cell,null,a.id),_react.default.createElement(_semanticUiReact.Table.Cell,null,a.state),_react.default.createElement(_semanticUiReact.Table.Cell,null),_react.default.createElement(_semanticUiReact.Table.Cell,null,a.snapshot),_react.default.createElement(_semanticUiReact.Table.Cell,null),_react.default.createElement(_semanticUiReact.Table.Cell,null,d),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},b),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0,style:{textAlign:"right"}},c),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},_react.default.createElement(_semanticUiReact.Button,{icon:!0,loading:"reload"===this.state.loading,disabled:!!this.state.loading,onClick:()=>this.reload()},_react.default.createElement(_semanticUiReact.Icon,{name:"sync alternate"}))))}}var _default=a=>{const b=[["machine","All machines"],["machine?templates","Templates"],["machine?running","Running machines"]].map((b,c)=>_react.default.createElement("a",{key:c,className:a.activeTab===c?"active item":"item",href:b[0]},b[1])),c=a.machines.map(a=>_react.default.createElement(Machine,{key:a.id,machine:a}));return _react.default.createElement(_semanticUiReact.Grid,null,_react.default.createElement(_semanticUiReact.Grid.Column,null,_react.default.createElement(_semanticUiReact.Header,{size:"large",color:"teal"},"Virtual machines"),_react.default.createElement("div",{className:"ui top attached tabular menu"},b),_react.default.createElement("div",{className:"ui bottom attached segment active tab"},_react.default.createElement(_semanticUiReact.Table,{selectable:!0},_react.default.createElement(_semanticUiReact.Table.Header,null,_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Name"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{colSpan:2},"State"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{colSpan:2},"Snapshot"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"IP-s"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null))),_react.default.createElement("tbody",null,c)))))};exports.default=_default;
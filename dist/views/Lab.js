"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _react=_interopRequireDefault(require("react")),_reactDom=_interopRequireDefault(require("react-dom")),_tableDragger=_interopRequireDefault(require("table-dragger")),_semanticUiReact=require("semantic-ui-react");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}let templatesLoadPromiseResolve,needTemplates=!0,templatesLoadPromise=new Promise(a=>{templatesLoadPromiseResolve=a});async function loadTemplates(){if(needTemplates){needTemplates=!1;const a=await fetch("machine?templates",{headers:{accept:"application/json"}});a.ok&&a.json().then(a=>{templatesLoadPromiseResolve(a.map(a=>a.id))}).catch(a=>{console.error("Failed to load templates: ",a)})}}let repositoriesLoadPromiseResolve,needRepositories=!0,repositoriesLoadPromise=new Promise(a=>{repositoriesLoadPromiseResolve=a});async function loadRepositories(){if(needRepositories){needRepositories=!1;const a=await fetch("repository",{headers:{accept:"application/json"}});a.ok&&a.json().then(a=>{const b={};for(const c of a)b[c._id]=Object.keys(c.refs);repositoriesLoadPromiseResolve(b)}).catch(a=>{console.error("Failed to load repositories: ",a)})}}class Assistant extends _react.default.Component{constructor(a){super(),this.state={errors:{},assistant:a.assistant}}getValue(){return this.state.assistant?{...this.state.assistant}:void 0}createAssistant(){this.setState({assistant:{url:"",lab:"",key:""}})}deleteAssistant(){this.setState({errors:{},assistant:void 0})}setField(a){return b=>{this.setState({assistant:{...this.state.assistant,[a]:b.target.value}})}}validateNotEmpty(a,b){return c=>{this.setState({errors:{...this.state.errors,[a]:1>c.target.value.length?b:void 0}})}}render(){return"object"==typeof this.state.assistant&&this.state.assistant?_react.default.createElement("div",null,_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Input,{label:"URL",defaultValue:this.state.assistant.url,error:this.state.errors.url,onChange:this.validateNotEmpty("url","URL must not be empty"),onBlur:this.setField("url"),style:{width:"28.5em"}})),_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Input,{label:"Lab ID",defaultValue:this.state.assistant.lab,error:this.state.errors.lab,onChange:this.validateNotEmpty("lab","Lab ID must not be empty"),onBlur:this.setField("lab")})),_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Input,{label:"Key",defaultValue:this.state.assistant.key,error:this.state.errors.key,onChange:this.validateNotEmpty("key","Key must not be empty"),onBlur:this.setField("key"),style:{width:"23.5em"}})),_react.default.createElement(_semanticUiReact.Button,{negative:!0,onClick:()=>this.deleteAssistant()},"Remove")):_react.default.createElement(_semanticUiReact.Button,{color:"yellow",onClick:()=>this.createAssistant()},"Add")}}class Network extends _react.default.Component{constructor(a){super(a),this.state={errors:{},type:a.network.type||"virtualbox",name:a.network.name||"",promiscuous:!!a.network.promiscuous,resetMac:!!a.network.resetMac,ip:a.network.ip||""}}getValue(){if(!this.state.name)return null;const a={name:this.state.name};return"virtualbox"===this.props.machineType&&(a.type=this.state.type,this.state.promiscuous&&(a.promiscuous=!0),this.state.resetMac&&(a.resetMac=!0),this.state.ip&&(a.ip=this.state.ip)),a}validateNotEmpty(a,b){return c=>{this.setState({errors:{...this.state.errors,[a]:1>c.target.value.length?b:void 0}})}}render(){const a=_react.default.createElement(_semanticUiReact.Input,{defaultValue:this.state.name,icon:"setting",error:this.state.errors.name,onChange:this.validateNotEmpty("name","Network name must not be empty"),onBlur:a=>this.setState({name:a.target.value}),autoFocus:this.props.autoFocus}),b="virtualbox"===this.props.machineType?_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Dropdown,{selection:!0,fluid:!0,defaultValue:this.state.type,options:[{text:"VirtualBox internal network",value:"virtualbox"},{text:"Bridged",value:"bridged"}],onChange:(a,b)=>{this.setState({type:b.value})}}),_react.default.createElement(_semanticUiReact.Input,{label:"IP:",defaultValue:this.state.ip,onBlur:a=>this.setState({ip:a.target.value})}),_react.default.createElement(_semanticUiReact.Checkbox,{toggle:!0,label:"Promiscuous",defaultChecked:this.state.promiscuous,onChange:(a,b)=>{this.setState({promiscuous:b.checked})}}),_react.default.createElement(_semanticUiReact.Checkbox,{toggle:!0,label:"Reset MAC",defaultChecked:this.state.resetMac,onChange:(a,b)=>this.setState({resetMac:b.checked})})):_react.default.createElement(_semanticUiReact.Dropdown,{selection:!0,fluid:!0,value:"bridged",disabled:!0,options:[{text:"Bridged",value:"bridged"}]});return _react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Popup,{hideOnScroll:!0,trigger:a,content:b,on:"click",position:"right center"}),_react.default.createElement(_semanticUiReact.Button,{negative:!0,icon:!0,onClick:this.props.onDelete},_react.default.createElement(_semanticUiReact.Icon,{name:"delete",style:{verticalAlign:"middle"}})))}}class Networks extends _react.default.Component{constructor(a){super(),this.state={networks:{...a.networks},order:a.networks.map((a,b)=>b),newIndex:a.networks.length}}getValue(){return this.state.order.map(a=>this.refs["network-"+a].getValue())}addNetwork(){const a=this.state.newIndex+1,b=[...this.state.order,a],c={...this.state.networks,[a]:{}};this.setState({newIndex:a,order:b,networks:c})}deleteNetwork(a){const b=[...this.state.order],c={...this.state.networks},d=this.state.order.indexOf(a);delete c[a],-1!==d&&b.splice(d,1),this.setState({order:b,networks:c})}render(){const a=this.state.order.map(a=>_react.default.createElement(Network,{ref:"network-"+a,key:a,network:this.state.networks[a],onDelete:()=>this.deleteNetwork(a),autoFocus:a===this.state.newIndex,machineType:this.props.machineType}));return _react.default.createElement("div",null,a,_react.default.createElement(_semanticUiReact.Button,{positive:!0,icon:!0,onClick:()=>this.addNetwork()},_react.default.createElement(_semanticUiReact.Icon,{name:"plus",size:"large"})))}}class MachineLimits extends _react.default.Component{constructor(a){super();const b=a.limits||[];this.state={cpu:b.cpu||void 0,cpuAllowance:b.cpuAllowance||100,memory:b.memory||void 0,errors:{}}}getValue(){if(this.state.cpu||100!==this.state.cpuAllowance||this.state.memory)return{cpu:this.state.cpu||void 0,cpuAllowance:this.state.cpuAllowance&&100!==this.state.cpuAllowance?this.state.cpuAllowance:void 0,memory:this.state.memory||void 0}}render(){return _react.default.createElement(_semanticUiReact.Table,{collapsing:!0},_react.default.createElement(_semanticUiReact.Table.Body,null,_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},"CPU:"),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{type:"number",style:{width:"10em"},defaultValue:this.state.cpu,onChange:a=>this.setState({cpu:+a.target.value})}))),_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},"CPU Allowance:"),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement("input",{type:"range",min:"1",max:"100",defaultValue:this.state.cpuAllowance||"100",onChange:a=>this.setState({cpuAllowance:+a.target.value})})," ",this.state.cpuAllowance,"%")),_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},"Memory:"),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{type:"number",style:{width:"10em"},defaultValue:this.state.memory,onChange:a=>this.setState({memory:+a.target.value})})," MiB"))))}}class MachineRepositories extends _react.default.Component{constructor(a){super();const b=a.repositories?[...a.repositories]:[];this.state={allRepositories:{},nameErrors:{},locationErrors:{},refErrors:{},repositories:{...b},order:b.map((a,b)=>b),newIndex:b.length},repositoriesLoadPromise.then(a=>{this.setState({allRepositories:a})})}getValue(){const a=[];for(const b of this.state.order)a.push(this.state.repositories[b]);return a.length?a:void 0}addRepository(){const a=++this.state.newIndex,b=[...this.state.order,a],c={...this.state.repositories,[a]:{}};this.setState({repositories:c,order:b,newIndex:a})}deleteRepository(a){const b={...this.state.repositories},c=[...this.state.order];delete b[a];const d=c.indexOf(a);0<=d&&c.splice(d,1),this.setState({repositories:b,order:c})}setRepository(a,b){return c=>{this.setState({repositories:{...this.state.repositories,[a]:{...this.state.repositories[a],[b]:c.target.value}}})}}validateName(a){return b=>{this.setState({nameErrors:{...this.state.nameErrors,[a]:!/^[a-zA-Z0-9_-]+$/.test(b.target.value)}})}}validateLocation(a){return b=>{this.setState({locationErrors:{...this.state.locationErrors,[a]:!/^\/.+$/.test(b.target.value)}})}}validateRef(a){return b=>{this.setState({refErrors:{...this.state.refErrors,[a]:!/^[a-zA-Z0-9_/-]*$/.test(b.target.value)}})}}render(){const a=this.state.order.map(a=>_react.default.createElement(_semanticUiReact.Table.Row,{key:a},_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{fluid:!0,list:"repositories",defaultValue:this.state.repositories[a].name,onBlur:this.setRepository(a,"name"),onChange:this.validateName(a),autoFocus:a===this.state.newIndex,onFocus:loadRepositories,error:this.state.nameErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{fluid:!0,defaultValue:this.state.repositories[a].location,onBlur:this.setRepository(a,"location"),onChange:this.validateLocation(a),error:this.state.locationErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement("datalist",{id:"refs-"+a},(this.state.allRepositories[this.state.repositories[a].name]||[]).map(a=>_react.default.createElement("option",{key:a},a))),_react.default.createElement(_semanticUiReact.Input,{fluid:!0,list:"refs-"+a,defaultValue:this.state.repositories[a].ref,onBlur:this.setRepository(a,"ref"),onChange:this.validateRef(a),onFocus:loadRepositories,error:this.state.refErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},_react.default.createElement(_semanticUiReact.Button,{icon:!0,negative:!0,onClick:()=>this.deleteRepository(a)},_react.default.createElement(_semanticUiReact.Icon,{name:"delete"})))));return _react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Table,null,_react.default.createElement(_semanticUiReact.Table.Header,null,_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Repository name"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Repository location in machine"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Ref"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null))),_react.default.createElement(_semanticUiReact.Table.Body,null,a)),_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.addRepository(),autoFocus:!0},"New"))}}class Machine extends _react.default.Component{constructor(a){super(),this.state={errors:{},machine:{type:"virtualbox",...a.machine}},"enable_token"in a.machine&&(this.state.machine.enable_private=a.machine.enable_token,delete this.state.machine.enable_token)}getValue(){return{...this.state.machine,networks:this.refs.networks.getValue()}}setId(a){const b=a.target.value,c=this.props.onIdChange(b);!1===c&&(a.target.value=this.props.id,this.setState({errors:{...this.state.errors,id:void 0}}))}setMachineField(a,b){this.setState({machine:{...this.state.machine,[a]:b}})}validateRegex(a,b){return c=>{this.setState({errors:{...this.state.errors,[a]:!b.test(c.target.value)||void 0}})}}render(){const a=this.state.machine,b=_react.default.createElement(_semanticUiReact.Input,{fluid:!0,defaultValue:this.props.id,autoFocus:this.props.autoFocus,onChange:this.validateRegex("id",/^[a-zA-Z0-9-_]+$/),error:this.state.errors.id,onFocus:a=>a.target.select(),onBlur:a=>this.setId(a),icon:"lxd"===a.type?"box":"desktop"}),c=_react.default.createElement(_semanticUiReact.Input,{fluid:!0,defaultValue:a.description,onChange:this.validateRegex("description",/./),error:this.state.errors.description,onBlur:a=>this.setMachineField("description",a.target.value)}),d=_react.default.createElement(_semanticUiReact.Input,{fluid:!0,list:"virtualbox"===a.type?"virtualbox-templates":void 0,defaultValue:a.base,error:this.state.errors.base,onChange:this.validateRegex("base",/[a-zA-Z0-9-_]+-template$/),onBlur:a=>this.setMachineField("base",a.target.value),onFocus:loadTemplates});let e;"lxd"===a.type&&(e=_react.default.createElement(_semanticUiReact.Modal,{trigger:_react.default.createElement(_semanticUiReact.Button,{color:"teal"},"Configure"),closeIcon:!0,closeOnDimmerClick:!1,onClose:()=>this.setState({machine:{...this.state.machine,limits:this.refs.limits.getValue(),repositories:this.refs.repositories.getValue()}})},_react.default.createElement(_semanticUiReact.Header,null,"Container configuration"),_react.default.createElement(_semanticUiReact.Modal.Content,null,_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Limits"),_react.default.createElement(MachineLimits,{ref:"limits",limits:a.limits})),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Repositories"),_react.default.createElement(MachineRepositories,{ref:"repositories",repositories:a.repositories})))));const f=(b,c=!1)=>a[b]?_react.default.createElement(_semanticUiReact.Button,{onClick:()=>this.setMachineField(b,!1),primary:!0,icon:!0,disabled:c},_react.default.createElement(_semanticUiReact.Icon,{name:"check"})):_react.default.createElement(_semanticUiReact.Button,{onClick:()=>this.setMachineField(b,!0),icon:!0,disabled:c},_react.default.createElement(_semanticUiReact.Icon,{name:"circle"}));let g;return this.props.primary&&(g=_react.default.createElement(_semanticUiReact.Icon,{name:"star",size:"big"})),_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.Cell,{className:"table-dragger-handle",collapsing:!0},_react.default.createElement(_semanticUiReact.Icon,{name:"sort",size:"big"})),_react.default.createElement(_semanticUiReact.Table.Cell,{onClick:this.props.onPrimary,collapsing:!0},g),_react.default.createElement(_semanticUiReact.Table.Cell,null,b),_react.default.createElement(_semanticUiReact.Table.Cell,null,c),_react.default.createElement(_semanticUiReact.Table.Cell,null,d),_react.default.createElement(_semanticUiReact.Table.Cell,null,f("enable_autostart")),_react.default.createElement(_semanticUiReact.Table.Cell,null,f("enable_private")),_react.default.createElement(_semanticUiReact.Table.Cell,null,f("enable_remote","lxd"===a.type)),_react.default.createElement(_semanticUiReact.Table.Cell,null,f("enable_restart")),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},_react.default.createElement(Networks,{ref:"networks",networks:a.networks,machineType:a.type})),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},e),_react.default.createElement(_semanticUiReact.Table.Cell,{collapsing:!0},_react.default.createElement(_semanticUiReact.Button,{negative:!0,onClick:this.props.onDelete},"Delete")))}}class Machines extends _react.default.Component{constructor(a){super(),this.state={primary:a.primary,machines:{...a.machines},machineOrder:[...a.machineOrder],keys:{}};for(let b=0;b<a.machineOrder.length;b++)this.state.keys[a.machineOrder[b]]=b;templatesLoadPromise.then(a=>{this.setState({templates:a})})}getValue(){const a={machines:{},machineOrder:[...this.state.machineOrder],primaryMachine:this.state.primary};for(const b of this.state.machineOrder)a.machines[b]=this.refs["machine-"+b].getValue();return a}createTableDragger(){this.tableDragger&&this.tableDragger.destroy();try{const a=_reactDom.default.findDOMNode(this).querySelector("table");this.tableDragger=(0,_tableDragger.default)(a,{mode:"row",dragHandler:".table-dragger-handle",onlyBody:!0,animation:300}).on("drop",(a,b)=>{a--,b--;const c=[...this.state.machineOrder],d=c.splice(a,1);c.splice(b,0,d[0]),this.setState({machineOrder:c})})}catch(a){}}componentDidMount(){this.createTableDragger()}componentDidUpdate(){this.createTableDragger()}changeId(a){return b=>{if(a===b||""===b||this.state.machineOrder.includes(b))return!1;const c={...this.state.machines},d=[...this.state.machineOrder],e={...this.state.keys};c[b]=c[a],e[b]=e[a],delete c[a],delete e[a];const f=d.indexOf(a);-1!==f&&d.splice(f,1,b);let g=this.state.primary;g===a&&(g=b),this.setState({machines:c,machineOrder:d,keys:e,primary:g})}}newMachine(a){const b={...this.state.machines},c=[...this.state.machineOrder],d={...this.state.keys},e=Date.now().toString(16);b[e]={type:a,description:"",base:"",networks:[]},d[e]=Date.now(),c.push(e),this.setState({machines:b,machineOrder:c,keys:d,newMachine:e})}deleteMachine(a){return()=>{const b={...this.state.machines},c=[...this.state.machineOrder],d={...this.state.keys};delete b[a],delete d[a];const e=c.indexOf(a);0<=e&&c.splice(e,1);let f=this.state.primary;f===a&&(f=void 0),this.setState({machines:b,machineOrder:c,keys:d,primary:f})}}setPrimary(a){return()=>{this.setState({primary:a===this.state.primary?void 0:a})}}shouldComponentUpdate(a,b){return a!==this.props||b.machineOrder!==this.state.machineOrder||b.templates!==this.state.templates||b.primary!==this.state.primary}render(){if(0===this.state.machineOrder.length)return _react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.newMachine("virtualbox")},"New machine"),_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.newMachine("lxd")},"New container"));const a=this.state.machineOrder.map(a=>_react.default.createElement(Machine,{ref:"machine-"+a,key:this.state.keys[a],id:a,machine:this.state.machines[a],onIdChange:this.changeId(a),onDelete:this.deleteMachine(a),onPrimary:this.setPrimary(a),primary:this.state.primary===a,autoFocus:this.state.newMachine===a}));return _react.default.createElement("div",null,_react.default.createElement("datalist",{id:"virtualbox-templates"},"templates"in this.state&&this.state.templates.map(a=>_react.default.createElement("option",{key:a},a))),_react.default.createElement(_semanticUiReact.Table,null,_react.default.createElement(_semanticUiReact.Table.Header,null,_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.HeaderCell,{collapsing:!0}),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{collapsing:!0},"Primary"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"ID"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Description"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Base template"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{width:1},"Autostart"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{width:1},"Private details"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{width:1},"Remote console"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{width:1},"Power control"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,{collapsing:!0},"Networks"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null))),_react.default.createElement(_semanticUiReact.Table.Body,null,a)),_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.newMachine("virtualbox")},"New machine"),_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.newMachine("lxd")},"New container"))}}class Repositories extends _react.default.Component{constructor(a){super(),this.state={allRepositories:{},idErrors:{},nameErrors:{},headErrors:{},repositories:{},order:[],newIndex:a.repositories.length};let b=0;for(const c in a.repositories)this.state.repositories[b]={id:c,name:a.repositories[c].name,head:a.repositories[c].head},this.state.order.push(b++);this.state.newIndex=b,repositoriesLoadPromise.then(a=>{this.setState({allRepositories:a})})}getValue(){const a={};let b=!1;for(const c of this.state.order){const d=this.state.repositories[c];d.id&&d.name&&!(d.id in a)&&(a[d.id]={name:d.name},d.head&&(a[d.id].head=d.head),b=!0)}return b?a:void 0}addRepository(){const a=++this.state.newIndex,b=[...this.state.order,a],c={...this.state.repositories,[a]:{id:"",name:""}};this.setState({repositories:c,order:b,newIndex:a})}deleteRepository(a){const b={...this.state.repositories},c=[...this.state.order];delete b[a];const d=c.indexOf(a);0<=d&&c.splice(d,1),this.setState({repositories:b,order:c})}setRepository(a,b){return c=>{this.setState({repositories:{...this.state.repositories,[a]:{...this.state.repositories[a],[b]:c.target.value}}})}}validateId(a){return b=>{let c=!1;if(!/^[a-zA-Z0-9_-]+$/.test(b.target.value))c=!0;else for(const d of this.state.order)if(d!==a&&this.state.repositories[d].id===b.target.value){c=!0;break}this.setState({idErrors:{...this.state.idErrors,[a]:c}})}}validateName(a){return b=>{this.setState({nameErrors:{...this.state.nameErrors,[a]:!/^[a-zA-Z0-9_-]+$/.test(b.target.value)}})}}validateHead(a){return b=>{this.setState({headErrors:{...this.state.headErrors,[a]:!/^[a-zA-Z0-9_/-]*$/.test(b.target.value)}})}}render(){const a=this.state.order.map(a=>_react.default.createElement(_semanticUiReact.Table.Row,{key:a},_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{list:"repositories",defaultValue:this.state.repositories[a].id,onBlur:this.setRepository(a,"id"),onChange:this.validateId(a),autoFocus:a===this.state.newIndex,onFocus:loadRepositories,error:this.state.idErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Input,{list:"repositories",defaultValue:this.state.repositories[a].name,onBlur:this.setRepository(a,"name"),onChange:this.validateName(a),onFocus:loadRepositories,error:this.state.nameErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement("datalist",{id:"refs-"+a},(this.state.allRepositories[this.state.repositories[a].name]||[]).map(a=>_react.default.createElement("option",{key:a},a))),_react.default.createElement(_semanticUiReact.Input,{list:"refs-"+a,defaultValue:this.state.repositories[a].head,onBlur:this.setRepository(a,"head"),onChange:this.validateHead(a),onFocus:loadRepositories,error:this.state.headErrors[a]})),_react.default.createElement(_semanticUiReact.Table.Cell,null,_react.default.createElement(_semanticUiReact.Button,{icon:!0,negative:!0,onClick:()=>this.deleteRepository(a)},_react.default.createElement(_semanticUiReact.Icon,{name:"delete"})))));return _react.default.createElement("div",null,_react.default.createElement("datalist",{id:"repositories"},Object.keys(this.state.allRepositories).map(a=>_react.default.createElement("option",{key:a},a))),this.state.order.length?_react.default.createElement(_semanticUiReact.Table,{collapsing:!0},_react.default.createElement(_semanticUiReact.Table.Header,null,_react.default.createElement(_semanticUiReact.Table.Row,null,_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"ID"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Name"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null,"Head"),_react.default.createElement(_semanticUiReact.Table.HeaderCell,null))),_react.default.createElement(_semanticUiReact.Table.Body,null,a)):void 0,_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.addRepository()},"New"))}}class Endpoints extends _react.default.Component{constructor(a){super(),this.state={endpoints:{...a.endpoints},order:a.endpoints.map((a,b)=>b),newIndex:a.endpoints.length}}normalize(){const a=this.state.order.filter(a=>this.state.endpoints[a].length);this.setState({order:a})}getValue(){this.normalize();const a=this.state.order.map(a=>this.state.endpoints[a]);return a.length?a:void 0}addEndpoint(){const a=++this.state.newIndex,b=[...this.state.order,a],c={...this.state.endpoints,[a]:""};this.setState({endpoints:c,order:b,newIndex:a})}setEndpoint(a){return b=>{if(""===b.target.value){const b=[...this.state.order],c=b.indexOf(a);-1<c&&(b.splice(c,1),this.setState({order:b}))}else if(this.state.endpoints[a]!==b.target.value&&this.state.order.find(a=>this.state.endpoints[a]===b.target.value)===void 0){const c={...this.state.endpoints};c[a]=b.target.value,this.setState({endpoints:c})}else b.target.value=this.state.endpoints[a]}}render(){const a=this.state.order.map(a=>_react.default.createElement("div",{key:a},_react.default.createElement(_semanticUiReact.Input,{ref:"endpoint-"+a,defaultValue:this.state.endpoints[a],onBlur:this.setEndpoint(a),autoFocus:a===this.state.newIndex})));return _react.default.createElement("div",null,a,_react.default.createElement(_semanticUiReact.Button,{positive:!0,onClick:()=>this.addEndpoint()},"New"))}}class Gitlab extends _react.default.Component{constructor(a){super(),this.state={gitlab:a.gitlab}}getValue(){return"object"==typeof this.state.gitlab&&this.state.gitlab?{...this.state.gitlab}:void 0}createGitlab(){this.setState({gitlab:{url:"",key:""}})}deleteGitlab(){this.setState({gitlab:void 0})}setField(a){return b=>{this.setState({gitlab:{...this.state.gitlab,[a]:b.target.value}})}}render(){return"object"==typeof this.state.gitlab&&this.state.gitlab?_react.default.createElement("div",null,_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Input,{label:"URL",defaultValue:this.state.gitlab.url,onBlur:this.setField("url"),style:{width:"28.5em"}})),_react.default.createElement("div",null,_react.default.createElement(_semanticUiReact.Input,{label:"Key",defaultValue:this.state.gitlab.key,onBlur:this.setField("key")})),_react.default.createElement(_semanticUiReact.Button,{negative:!0,onClick:()=>this.deleteGitlab()},"Remove")):_react.default.createElement(_semanticUiReact.Button,{color:"yellow",onClick:()=>this.createGitlab()},"Add")}}class _default extends _react.default.Component{constructor(){super(),this.state={loading:!1}}getValue(){return{assistant:this.refs.assistant.getValue(),...this.refs.machines.getValue(),repositories:this.refs.repositories.getValue(),endpoints:this.refs.endpoints.getValue(),gitlab:this.refs.gitlab.getValue()}}async save(){this.state.loading||(this.setState({loading:"save"}),fetch("lab/"+encodeURIComponent(this.props.lab._id),{method:"PUT",headers:{"content-type":"application/json","if-match":this.props.lab._rev},body:JSON.stringify(this.getValue())}).then(a=>{a.ok?window.location.href="lab":this.setState({loading:null})}).catch(()=>{this.setState({loading:null})}))}render(){const a=this.props.lab,b=_react.default.createElement(Assistant,{ref:"assistant",assistant:a.assistant}),c=_react.default.createElement(Machines,{ref:"machines",machines:"machines"in a?a.machines:{},machineOrder:"machineOrder"in a?a.machineOrder:[],primary:a.primaryMachine}),d=_react.default.createElement(Repositories,{ref:"repositories",repositories:"repositories"in a?a.repositories:{}}),e=_react.default.createElement(Endpoints,{ref:"endpoints",endpoints:"endpoints"in a?a.endpoints:[]}),f=_react.default.createElement(Gitlab,{ref:"gitlab",gitlab:a.gitlab});return _react.default.createElement(_semanticUiReact.Grid,null,_react.default.createElement(_semanticUiReact.Grid.Column,null,_react.default.createElement(_semanticUiReact.Header,{color:"teal",size:"huge"},"Lab: ",a._id),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Assistant ",_react.default.createElement(_semanticUiReact.Popup,{trigger:_react.default.createElement(_semanticUiReact.Icon,{color:"blue",name:"info circle",size:"tiny"})},_react.default.createElement("p",null,"Virtual Teaching Assistant is proprietary software used to directly interact with end user."),_react.default.createElement("p",null,"Lab manager can create VirtualTA lab instance and provide access to that instance to integrated applications."))),b),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Machines"),c),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Repositories ",_react.default.createElement(_semanticUiReact.Popup,{trigger:_react.default.createElement(_semanticUiReact.Icon,{color:"blue",name:"info circle",size:"tiny"})},_react.default.createElement("p",null,"Repositories which this lab has access to. ID is alias to repo (often equal to name), different labs can access to different repositories with same ID. Name is on-disk repository name."))),d),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Endpoints ",_react.default.createElement(_semanticUiReact.Popup,{trigger:_react.default.createElement(_semanticUiReact.Icon,{color:"blue",name:"info circle",size:"tiny"})},_react.default.createElement("p",null,"This section configures endpoints exposed to user via lab proxy"))),e),_react.default.createElement(_semanticUiReact.Segment,null,_react.default.createElement(_semanticUiReact.Header,null,"Gitlab"),f),_react.default.createElement(_semanticUiReact.Button,{primary:!0,onClick:()=>this.save(),disabled:!!this.state.loading},"Save")))}}exports.default=_default;